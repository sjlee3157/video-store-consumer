{"version":3,"sources":["components/HomePage.js","components/Movie.js","components/AddToLibrary.js","components/SearchList.js","components/SearchPage.js","components/SelectButton.js","components/LibraryList.js","components/LibraryPage.js","components/Customer.js","components/CustomerCard.js","components/CustomersList.js","components/CustomersPage.js","components/SearchBar.js","components/CheckOutForm.js","AppRouter.js","registerServiceWorker.js","index.js"],"names":["HomePage","react_default","a","createElement","Movie","props","releaseDate","moment","format","console","log","className","src","imageUrl","alt","title","overview","AddToLibrary","onClick","axios","post","then","response","renderAlertCallback","success","concat","catch","error","data","errors","failure","addMovie","SearchList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","searchResults","_this2","map","movie","i","key","components_Movie","externalId","external_id","id","image_url","release_date","components_AddToLibrary","assign","inventory","length","getSearchResults","_this3","query","url","get","movieSet","objectSpread","setState","message","getMovies","prevProps","Component","SearchPage","components_SearchList","SelectButton","customer","name","selectMovieButton","selectMovieCallback","selectCustomerButton","selectCustomerCallback","buttonType","LibraryList","movies","allMovies","reverse","components_SelectButton","lib","infiniteLoop","autoPlay","interval","showStatus","showIndicators","centerMode","centerSlidePercentage","selectedItem","errorMessage","LibraryPage","components_LibraryList","Customer","address","city","phone","accountCredit","moviesCheckedOutCount","CustomerCard","components_Customer","account_credit","movies_checked_out_count","postalCode","postal_code","registeredAt","registered_at","CustomersList","customers","allCustomers","components_CustomerCard","customerSet","CustomersPage","components_CustomersList","SearchBar","onFormChange","e","target","value","onSubmitHandler","_ref","asyncToGenerator","regenerator_default","mark","_callee","callbackPath","wrap","_context","prev","next","preventDefault","abrupt","searchTermCallback","sent","history","push","t0","stop","_x","apply","arguments","clearForm","searchIcon","index_es","icon","onSubmit","autoComplete","autoCorrect","autoCapitalize","spellCheck","onChange","placeholder","size","type","withRouter","CheckOutForm","rentMovie","dueDate","add","selectedMovie","selectedCustomer","params","customer_id","due_date","checkOutUrl","resetCheckOutFormCallback","htmlFor","library","fas","AppRouter","searchTerm","selectMovie","selectCustomer","renderAlert","alert","setTimeout","resetCheckOutForm","displayAlert","alertType","keys","alertMessage","values","page","Route","path","exact","component","components_SearchPage","components_LibraryPage","components_CustomersPage","BrowserRouter","NavLink","to","components_SearchBar","components_CheckOutForm","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_AppRouter_0","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.fbf93611.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles/HomePage.css';\n\n\nconst HomePage = () => {\n  return <h1>Webflix. Reimagined.</h1>\n}\n\nexport default HomePage;\n","import React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport './styles/Movie.css';\n\n\nconst Movie = (props) => {\n\n  const releaseDate = moment( props.releaseDate ).format('MMM Do, YYYY');\n    console.log(props);\n  return (\n\n    <div className=\"card-body\">\n      <img className=\"card-img-top\"\n        src={ props.imageUrl } alt={ props.title }/>\n      <h3 className=\"card-title\">{ props.title }</h3>\n      <p className=\"card-subtitle\">\n        <small className=\"text-muted\">\n          Released on: { releaseDate }\n        </small>\n      </p>\n      <p className=\"card-text\">{ props.overview }</p>\n    </div>\n  )\n}\n\nMovie.propTypes = {\n  id: PropTypes.number,\n  externalId: PropTypes.number,\n  overview: PropTypes.string,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string,\n  releaseDate: PropTypes.string\n};\n\nexport default Movie;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles/AddToLibrary.css';\n\nimport axios from 'axios';\n\n\nconst URL = 'http://localhost:3000/movies'\n\nconst AddToLibrary = (props) => {\n  // let params = {...props};\n  // const string = props.image_url\n  // params.image_url = string.substr(string.indexOf(\"w185\") + 4)\n  // console.log(params.image_url)\n  const addMovie = (props) => {\n    // console.log(\"HERE\", params)\n    axios.post(URL, props)\n      .then((response) => {\n        console.log(response, props)\n        props.renderAlertCallback({\"success\": `${props.title} successfully added.`})\n        })\n      .catch((error) => {\n        console.log(error.response.data.errors);\n        props.renderAlertCallback({\"failure\": `${error.response.data.errors}`})\n      });\n\n  }\n\n  const onButtonClick = () => {\n    addMovie(props)\n  }\n\n  return <button className=\"button\" onClick={onButtonClick}>+ Add To Our Library</button>\n\n}\n\nAddToLibrary.propTypes = {\n  id: PropTypes.number,\n  external_id: PropTypes.number,\n  overview: PropTypes.string,\n  image_url: PropTypes.string,\n  title: PropTypes.string,\n  release_date: PropTypes.string,\n  inventory: PropTypes.number,\n  renderAlertCallback: PropTypes.func\n};\n\n\nexport default AddToLibrary;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles/SearchList.css';\n\nimport Movie from './Movie'\nimport AddToLibrary from './AddToLibrary'\n\nimport axios from 'axios';\nconst SEARCH_MOVIES_URL = 'http://localhost:3000/movies?query='\n\n\nclass SearchList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchResults: []\n      }\n  }\n\n  render() {\n      const getSearchResults = () => {\n        const searchResults = this.state.searchResults\n        .map((movie, i) => {\n          return (\n            <div className=\"card movie-card\" key={i}>\n              <Movie\n                key={i}\n                externalId={movie.external_id}\n                id={movie.id}\n                imageUrl ={movie.image_url}\n                overview={movie.overview}\n                releaseDate={movie.release_date}\n                title={movie.title}\n              />\n              <AddToLibrary {...movie}\n                inventory={5}\n                renderAlertCallback= {this.props.renderAlertCallback} />\n            </div>\n\n          )\n        })\n        console.log(`Successfully Loaded ${ searchResults.length } Search Results`, this.state.searchResults)\n        return searchResults\n      }\n\n      return (\n        <div>\n          <ul>\n           { getSearchResults() }\n          </ul>\n         </div>\n      )\n    }\n\n// TODO: I think this should move to the SearchBar component to\n// reduce number of API calls we have to make... I'll think tomorrow SJL\n  getMovies() {\n    console.log('Get movies');\n    console.log(this.props.query);\n    const url = SEARCH_MOVIES_URL + this.props.query;\n    axios.get(url)\n      .then((response) => {\n        console.log(`API GET MOVIES`)\n        console.log(response);\n        const movieSet = response.data.map((movie) => {\n          const newMovie = { ...movie };\n          return newMovie;\n        })\n        this.setState({\n          searchResults: movieSet\n        });\n      })\n      .catch((error) => {\n        console.log(error.message);\n        // how do you get to the rest of the message body?\n      });\n  }\n\n  componentDidMount() {\n    if (this.props.query !== '') {\n      console.log('mount list');\n      this.getMovies();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.query !== '' ) {\n      console.log('update list');\n      if (this.props.query !== prevProps.query) {\n        this.getMovies();\n      }\n    }\n  }\n}\n\nSearchList.propTypes = {\n  query: PropTypes.string,\n  renderAlertCallback: PropTypes.func\n};\n\nexport default SearchList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles/SearchPage.css';\n\nimport SearchList from './SearchList'\n\n\nclass SearchPage extends Component {\n\n  render() {\n    console.log('Search page')\n      return (\n      <div>\n        <h1> Search Results</h1>\n        <SearchList\n          query={ this.props.query }\n          renderAlertCallback= { this.props.renderAlertCallback } />\n      </div>\n    )\n  }\n\n}\n\nSearchPage.propTypes = {\n  query: PropTypes.string,\n  renderAlertCallback: PropTypes.func\n};\n\nexport default SearchPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles/SelectButton.css';\n\n\nconst SelectButton = (props) => {\n\n  const label = ( props.movie ? props.movie.title : props.customer.name )\n\n  const selectMovieButton = (\n    <button className=\"button\" onClick={ () => props.selectMovieCallback(props.movie) }>\n      + Add To Rental\n    </button>\n  )\n\n  const selectCustomerButton = (\n    <button className=\"button\" onClick={ () => props.selectCustomerCallback(props.customer) }>\n      + Add As Renter\n    </button>\n  )\n\n  return (\n    <div className=\"button\">\n    { props.buttonType === \"selectMovie\" && selectMovieButton }\n    { props.buttonType === \"selectCustomer\" && selectCustomerButton }\n    </div>\n  )\n}\n\nSelectButton.propTypes = {\n  buttonType: PropTypes.string.isRequired,\n  movie: PropTypes.object,\n  customer: PropTypes.object,\n  selectMovieCallback: PropTypes.func,\n  selectCustomerCallback: PropTypes.func\n}\n\nexport default SelectButton;\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport './styles/LibraryList.css';\n\nimport SelectButton from \"./SelectButton\";\nimport axios from 'axios';\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\n\nconst URL = 'http://localhost:3000/movies/'\n\nclass LibraryList extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movies: []\n      }\n  }\n\n  render() {\n      const allMovies = this.state.movies\n        .reverse()\n        .map((movie, i) => {\n          const releaseDate = moment(movie.release_date).format('MMM Do, YYYY');\n          return (\n            // <MovieCard\n            //   key={ i }\n            //   movie={ movie }\n            //   selectMovieCallback={ this.props.selectMovieCallback }\n            // />\n            <div className=\"card movie-carousel__movie\" key={ i }>\n              <SelectButton\n                buttonType={ 'selectMovie' }\n                movie={ movie }\n                selectMovieCallback={ this.props.selectMovieCallback } />\n              <img className=\"card-img-top movie-carousel__movie-image\"\n                src={ movie.image_url } alt={ `${ movie.title }`}/>\n              <div className=\"card-body\">\n                <h3 className=\"card-title\">{ movie.title }</h3>\n                <p className=\"card-subtitle\"><small className=\"text-muted\">Released on: { releaseDate }</small></p>\n                <p className=\"card-text\">{ movie.overview }</p>\n              </div>\n\n            </div>\n          )\n        })\n      return (\n        <div className=\"movie-carousel\">\n          <Carousel\n            infiniteLoop={ true }\n            autoPlay={ true }\n            interval={ 10000 }\n            showStatus={ false }\n            showIndicators={ false}\n            centerMode={ true }\n            centerSlidePercentage={ 20 }\n            selectedItem={ 2 }\n            >\n            { allMovies }\n          </Carousel>\n        </div>\n      )\n    }\n\n  componentDidMount() {\n    axios.get(URL)\n      .then((response) => {\n        const movieSet = response.data.map((movie) => {\n          const newMovie = { ...movie };\n          return newMovie;\n        })\n\n        this.setState({ movies: movieSet });\n\n        })\n        .catch((error) => {\n          this.setState({\n            errorMessage: error.message,\n          });\n        });\n  }\n}\n\nLibraryList.propTypes = {\n  selectMovieCallback: PropTypes.func\n}\n\nexport default LibraryList;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport './styles/LibraryPage.css';\n\nimport LibraryList from './LibraryList.js';\n\nconst LibraryPage = (props) => {\n    return (\n      <div>\n        <h1>Our Movie Store</h1>\n        <LibraryList\n          selectMovieCallback= { props.selectMovieCallback }/>\n      </div>\n    )\n}\n\nLibraryPage.propTypes = {\n  selectMovieCallback: PropTypes.func\n}\n\nexport default LibraryPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles/Customer.css';\n\n\nconst Customer = (props) => {\n\n  return (\n    <li>\n      <h3>{props.name}</h3>\n      <p>{props.address}, {props.city} {props.state}</p>\n      <p>{props.phone}</p>\n      <p>Account Credit: {props.accountCredit}</p>\n      <p> Movies checked out: {props.moviesCheckedOutCount}</p>\n    </li>\n  )\n}\n\nCustomer.propTypes = {\n  id: PropTypes.number,\n  accountCredit: PropTypes.number,\n  address: PropTypes.string,\n  city: PropTypes.string,\n  moviesCheckedOutCount: PropTypes.number,\n  name: PropTypes.string,\n  phone: PropTypes.string,\n  postalCode: PropTypes.string,\n  registeredAt: PropTypes.string,\n  state: PropTypes.string,\n};\n\nexport default Customer;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport './styles/CustomerCard.css';\n\nimport Customer from './Customer';\nimport SelectButton from './SelectButton';\n\nconst CustomerCard = (props) => {\n\n  const { customer } = props;\n\n  return (\n    <section>\n      <SelectButton\n        buttonType={ 'selectCustomer' }\n        customer={ customer }\n        selectCustomerCallback={ props.selectCustomerCallback }/>\n      <Customer\n        accountCredit={customer.account_credit}\n        address={customer.address}\n        city={customer.city}\n        id={customer.id}\n        moviesCheckedOutCount={customer.movies_checked_out_count}\n        name={customer.name}\n        phone={customer.phone}\n        postalCode={customer.postal_code}\n        registeredAt={customer.registered_at}\n        state={customer.state}\n      />\n     </section>\n  )\n}\n\nCustomerCard.propTypes = {\n  customer: PropTypes.object.isRequired,\n  selectCustomerCallback: PropTypes.func\n};\n\nexport default CustomerCard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles/CustomersList.css';\n\nimport CustomerCard from './CustomerCard';\nimport axios from 'axios';\n\n\nconst URL = 'http://localhost:3000/customers/'\n\nclass CustomersList extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      customers: []\n    }\n  }\n\n  render() {\n      console.log(\"Rendered Customers:\", this.state.customers)\n      const allCustomers = this.state.customers\n        .map((customer, i) => {\n          return (\n            <CustomerCard\n              key={ i }\n              customer={ customer }\n              selectCustomerCallback={ this.props.selectCustomerCallback }\n            />\n          )\n        })\n      return (\n        <div>\n          <ul>\n           { allCustomers }\n          </ul>\n         </div>\n      )\n    }\n\n  componentDidMount() {\n    axios.get(URL)\n      .then((response) => {\n        const customerSet = response.data.map((customer) => {\n          const newCustomer = { ...customer };\n          return newCustomer;\n        })\n\n        this.setState({ customers: customerSet });\n\n      })\n      .catch((error) => {\n        console.log(error.message);\n        this.setState({\n          errorMessage: error.message,\n        });\n      });\n  }\n}\n\nCustomersList.propTypes = {\n  selectCustomerCallback: PropTypes.func\n}\n\nexport default CustomersList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles/CustomersPage.css';\n\nimport CustomersList from './CustomersList.js';\n\nclass CustomersPage extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1> Customers Page</h1>\n        <CustomersList\n          selectCustomerCallback={ this.props.selectCustomerCallback }/>\n      </div>\n    )\n\n  }\n}\n\nCustomersPage.propTypes = {\n  selectCustomerCallback: PropTypes.func\n}\n\nexport default CustomersPage;\n","import React, { Component } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport './styles/SearchBar.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nclass SearchBar extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      query: ''\n    }\n  }\n\n  onFormChange = (e) => {\n    const query = e.target.value\n    this.setState({ query });\n  }\n\n  onSubmitHandler = async (e) => {\n    e.preventDefault();\n    const { query } = this.state;\n    if (query === '') return console.log('You must enter a search term :(');\n\n    try {\n      const callbackPath = await this.props.searchTermCallback(query);\n      this.props.history.push(callbackPath); //redirects to link defined in router '/search'\n    } catch(error) {\n      console.error(error)\n    }\n  }\n\n  clearForm = () => {\n    this.setState({ query: '' })\n  }\n\n  render() {\n    const searchIcon = <FontAwesomeIcon icon=\"search\" />\n    return (\n      <section>\n        <form onSubmit={ this.onSubmitHandler }\n          autoComplete=\"off\"\n          autoCorrect=\"off\"\n          autoCapitalize=\"off\"\n          spellCheck=\"false\">\n          <input\n            onClick={ this.clearForm }\n            className=\"searchbar__form-input\"\n            onChange={ this.onFormChange }\n            value={ this.state.query }\n            name=\"query\"\n            placeholder=\"Search movie database by title\"\n            size=\"40\"\n          />\n          <button className=\"button button-search\"\n            type=\"submit\" name=\"submit\">{ searchIcon }</button>\n        </form>\n      </section>\n    )\n  }\n}\n\nSearchBar.propTypes = {\n  searchTermCallback: PropTypes.func\n};\n\nexport default withRouter(SearchBar);\n","import React from 'react';\nimport moment from 'moment';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport './styles/CheckOutForm.css';\n\n\nconst CheckOutForm = (props) => {\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n\n    if (props.selectedMovie.title && props.selectedCustomer.id ) {\n      rentMovie();\n      props.resetCheckOutFormCallback();\n    } else {\n      console.log('did not submit. both fields must be filled out');\n    }\n  }\n\n  const rentMovie = () => {\n    console.log('renting movie (POST request)');\n\n    // SJL: Defaulting due date to 7 days from today\n    const dueDate = moment().add(7, 'days').format(\"MMM DD YYYY\");\n    const { selectedMovie, selectedCustomer } = props;\n    const title = selectedMovie.title\n    const params = {\n      customer_id: selectedCustomer.id,\n      due_date: dueDate,\n      renderAlertCallback: props.renderAlertCallback\n    }\n\n    const checkOutUrl = `http://localhost:3000/rentals/${title}/check-out`\n\n    axios.post(checkOutUrl, params)\n      .then((response) => {\n        params.renderAlertCallback({\"success\": `${selectedCustomer.name} has checked out ${selectedMovie.title}.`})\n        console.log(response.data);\n      })\n      .catch((error) => {\n        console.log(error.message);\n        params.renderAlertCallback({\"failure\":`This rental could not be created`})\n      })\n  }\n\n  const visibility = () => {\n    if (props.selectedMovie.title && props.selectedCustomer.name) {\n      return \"\"\n    } else {\n      return \"disabled\"\n    }\n  }\n\n  return (\n    <section className=\"checkout-form\">\n      <form onSubmit={ onSubmitHandler }>\n        <div className=\"checkout-form__movie\">\n          <label htmlFor=\"selectedMovie\">{ props.selectedMovie.title }</label>\n          <input type=\"hidden\" name=\"selectedMovie\" value={ props.selectedMovie } />\n        </div>\n        <div className=\"checkout-form__customer\">\n          <label htmlFor=\"selectedCustomer\">{ props.selectedCustomer.name }</label>\n          <input type=\"hidden\" name=\"selectedCustomer\" value={ props.selectedCustomer } />\n        </div>\n        <div className=\"checkout-form__submit\">\n          <input className= { `button button-large ${ visibility() }` }\n            type=\"submit\" name=\"submit\" value=\"Check Out Now\" />\n        </div>\n      </form>\n    </section>\n  )\n\n}\n\nCheckOutForm.propTypes = {\n  selectedMovie: PropTypes.object,\n  selectedCustomer: PropTypes.object,\n  resetCheckOutFormCallback: PropTypes.func,\n  renderAlertCallback: PropTypes.func\n}\n\nexport default CheckOutForm;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\nimport './AppRouter.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport HomePage from \"./components/HomePage\"\nimport SearchPage from \"./components/SearchPage\"\nimport LibraryPage from \"./components/LibraryPage\"\nimport CustomersPage from \"./components/CustomersPage\"\n\nimport SearchBar from \"./components/SearchBar\"\nimport CheckOutForm from './components/CheckOutForm'\n\nimport './AppRouter.css';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(fas);\n\n\nclass AppRouter extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      query: '',\n      selectedMovie: {},\n      selectedCustomer: {},\n      alert: {}\n    }\n  }\n\n  searchTerm = async (query) => {\n    console.log('callback');\n    console.log(query);\n    const callbackPath = '/search'\n    this.setState({ query })\n    return callbackPath\n  }\n\n  selectMovie = (selectedMovie) => {\n    this.setState({ selectedMovie })\n  }\n\n  selectCustomer = (selectedCustomer) => {\n    this.setState({ selectedCustomer })\n  }\n\n\n  renderAlert = (message) => {\n    console.log(\"IN RENDER ALERT\")\n    this.setState({alert: message})\n    setTimeout(() => this.setState({alert: {} }), 10000);\n  }\n\n  resetCheckOutForm = () => {\n    this.setState({\n      selectedMovie: {},\n      selectedCustomer: {}\n    })\n  }\n\n  displayAlert = () => {\n    const alertType = Object.keys(this.state.alert)[0];\n    const alertMessage = Object.values(this.state.alert)[0];\n\n    const alertIcon = () => {\n      if (alertType === \"success\") {\n        return <FontAwesomeIcon icon=\"star\" />\n      } else if (alertType === \"failure\"){\n        return <FontAwesomeIcon icon=\"ban\" />\n      } else if (alertType === \"warning\"){\n        return <FontAwesomeIcon icon=\"cog\" />\n      } else {\n        return \"\"\n      }\n    }\n\n\n    return (\n      <p className={ `router__nav-alerts-${alertType}` }>\n        {alertIcon()}  { alertMessage }\n      </p>\n    )\n  }\n\n  render() {\n    const page = (\n        <section>\n          <Route path=\"/\" exact component={ HomePage } />\n          <Route path=\"/search/\" component={ props =>\n              <SearchPage { ...props }\n                query= { this.state.query }\n                renderAlertCallback= { this.renderAlert }\n              />\n          } />\n          <Route path=\"/library/\" component={ props =>\n            <LibraryPage { ...props }\n              selectMovieCallback={ this.selectMovie }\n            />\n          } />\n          <Route path=\"/customers/\" component={ props =>\n            <CustomersPage { ...props }\n              selectCustomerCallback={ this.selectCustomer }\n            />\n          } />\n        </section>\n    )\n\n    return (\n      <Router>\n        <div className=\"router\">\n          <nav className=\"router__nav\">\n            <ul className=\"router__nav-list\">\n              <div className=\"router__nav-navlinks\">\n                <li>\n                  <h4><NavLink to=\"/\">Home</NavLink></h4>\n                </li>\n                <li>\n                  <h4><NavLink to=\"/library/\">Our Movie Store</NavLink></h4>\n                </li>\n                <li>\n                  <h4><NavLink to=\"/customers/\">Customers</NavLink></h4>\n                </li>\n                <li>\n                  <h4><SearchBar searchTermCallback={ this.searchTerm } /></h4>\n                </li>\n              </div>\n              <div className=\"router__nav-checkout\">\n                <li>\n                  <CheckOutForm\n                    selectedMovie={ this.state.selectedMovie }\n                    selectedCustomer={ this.state.selectedCustomer }\n                    resetCheckOutFormCallback={ this.resetCheckOutForm }\n                    renderAlertCallback= { this.renderAlert }\n                  />\n                </li>\n              </div>\n              <div className=\"router__nav-alerts\">\n                { this.displayAlert() }\n              </div>\n            </ul>\n          </nav>\n\n          { page }\n\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default AppRouter;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppRouter from './AppRouter';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}